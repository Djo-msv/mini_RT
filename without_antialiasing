--------------------------------------------------------------------------------
Profile data file 'callgrind.out.4079121' (creator: callgrind-3.18.1)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 1692408239
Trigger: Program termination
Profiled target:  ./miniRT scenes/test.rt (PID 4079121, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                      
--------------------------------------------------------------------------------
12,483,382,714 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                      file:function
--------------------------------------------------------------------------------
4,227,955,200 (33.87%)  srcs/render/resolution.c:handle_low_resolution [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
3,952,788,847 (31.66%)  ???:mlx::Texture::SetRegion(int, int, int, int, mlx_color*) [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/MacroLibX/libmlx.so]
  610,174,812 ( 4.89%)  srcs/render/shape/sphere.c:hit_sphere [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  434,143,445 ( 3.48%)  srcs/render/render.c:ray_color [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  406,425,600 ( 3.26%)  srcs/math/equation.c:scalar_product [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  345,435,800 ( 2.77%)  srcs/math/vector.c:vec_sub [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  326,383,805 ( 2.61%)  srcs/math/vector.c:create_vec [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  238,538,659 ( 1.91%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
  170,843,720 ( 1.37%)  srcs/math/vector.c:vec_add [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  167,808,000 ( 1.34%)  srcs/render/make_average_pixel.c:average_pixel [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  157,696,000 ( 1.26%)  srcs/display/mlx_screen.c:handle_pixel [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  152,761,020 ( 1.22%)  ./elf/./elf/dl-lookup.c:do_lookup_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  145,956,852 ( 1.17%)  srcs/render/setup_render.c:create_ray_direction [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  140,946,003 ( 1.13%)  srcs/math/vector.c:vec_mul [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  123,076,128 ( 0.99%)  ???:ft_memset [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  118,540,804 ( 0.95%)  srcs/render/render.c:render [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
  114,080,000 ( 0.91%)  srcs/render/antialiasing.c:get_antialiasing [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
   85,204,276 ( 0.68%)  srcs/math/equation.c:normalize [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
   70,560,000 ( 0.57%)  srcs/math/ray.c:create_ray [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
   34,309,371 ( 0.27%)  srcs/display/mlx_screen.c:display_screen [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
   24,320,004 ( 0.19%)  ???:mlx_set_image_pixel [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/MacroLibX/libmlx.so]
   23,738,316 ( 0.19%)  ???:0x0000000000f817f0 [/usr/lib/x86_64-linux-gnu/libnvidia-glcore.so.565.57.01]
   23,712,634 ( 0.19%)  ???:mlx::Application::GetTexture(mlx_image_handler*) [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/MacroLibX/libmlx.so]
   19,926,224 ( 0.16%)  ???:mlx::Font::BuildFont() [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/MacroLibX/libmlx.so]
   19,840,000 ( 0.16%)  ???:mlx::Texture::SetPixel(int, int, mlx_color) [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/MacroLibX/libmlx.so]
   19,444,128 ( 0.16%)  ./elf/./elf/dl-lookup.c:_dl_lookup_symbol_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
   18,506,950 ( 0.15%)  ./math/./math/w_sqrt_compat.c:sqrt [/usr/lib/x86_64-linux-gnu/libm.so.6]
   17,553,294 ( 0.14%)  ./libio/./libio/getc.c:getc [/usr/lib/x86_64-linux-gnu/libc.so.6]
   15,246,119 ( 0.12%)  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:__memset_avx2_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
   11,530,416 ( 0.09%)  srcs/display/mlx_image.c:clear_image [/home/jmassavi/Documents/commun_core/circle-4/mini_RT/miniRT]
   11,104,170 ( 0.09%)  ./math/../sysdeps/ieee754/dbl-64/e_sqrt.c:__sqrt_finite@GLIBC_2.15 [/usr/lib/x86_64-linux-gnu/libm.so.6]
    9,109,191 ( 0.07%)  ./elf/../sysdeps/x86_64/dl-machine.h:_dl_relocate_object
    8,234,161 ( 0.07%)  ???:0x0000000000061fd0 [/usr/lib/x86_64-linux-gnu/libX11.so.6.4.0]
    8,105,611 ( 0.06%)  ???:_XimParseStringFile [/usr/lib/x86_64-linux-gnu/libX11.so.6.4.0]
    7,529,617 ( 0.06%)  ./string/../sysdeps/x86_64/multiarch/strcspn-c.c:__strcspn_sse42 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    7,059,249 ( 0.06%)  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S:__strcmp_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    6,964,008 ( 0.06%)  ???:0x0000000000061f70 [/usr/lib/x86_64-linux-gnu/libX11.so.6.4.0]
    6,383,016 ( 0.05%)  ./libio/./libio/libioP.h:getc
    6,142,456 ( 0.05%)  ./malloc/./malloc/malloc.c:_int_malloc [/usr/lib/x86_64-linux-gnu/libc.so.6]
    4,960,058 ( 0.04%)  ./malloc/./malloc/malloc.c:_int_free [/usr/lib/x86_64-linux-gnu/libc.so.6]
    4,774,349 ( 0.04%)  ./elf/./elf/do-rel.h:_dl_relocate_object
    4,611,249 ( 0.04%)  ???:0x00000000000175b0 [/usr/lib/x86_64-linux-gnu/libexpat.so.1.8.7]
    4,439,082 ( 0.04%)  ???:0x00000000010167d0 [/usr/lib/x86_64-linux-gnu/libnvidia-glcore.so.565.57.01]
    4,389,738 ( 0.04%)  ???:0x0000000000cdee00 [/usr/lib/x86_64-linux-gnu/libnvidia-glcore.so.565.57.01]
    4,067,286 ( 0.03%)  ./nptl/./nptl/pthread_mutex_lock.c:pthread_mutex_lock@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    3,873,561 ( 0.03%)  ???:0x0000000000013a80 [/usr/lib/x86_64-linux-gnu/libexpat.so.1.8.7]
    3,569,678 ( 0.03%)  ???:XStringToKeysym [/usr/lib/x86_64-linux-gnu/libX11.so.6.4.0]
    3,568,809 ( 0.03%)  ./string/../sysdeps/x86_64/strcmp.S:strcmp [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    3,296,989 ( 0.03%)  ./stdlib/../stdlib/strtol_l.c:____strtoul_l_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
    3,221,158 ( 0.03%)  ???:0x000000000004c190 [/usr/lib/x86_64-linux-gnu/libX11.so.6.4.0]
    3,077,282 ( 0.02%)  ./nptl/./nptl/pthread_mutex_unlock.c:pthread_mutex_unlock@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    3,037,143 ( 0.02%)  ???:0x0000000000013480 [/usr/lib/x86_64-linux-gnu/libexpat.so.1.8.7]
    2,817,016 ( 0.02%)  /usr/lib/gcc/x86_64-linux-gnu/11/include/smmintrin.h:__strcspn_sse42
    2,466,846 ( 0.02%)  ./malloc/./malloc/malloc.c:malloc [/usr/lib/x86_64-linux-gnu/libc.so.6]
    2,231,530 ( 0.02%)  ???:_XrmInternalStringToQuark [/usr/lib/x86_64-linux-gnu/libX11.so.6.4.0]
    2,076,718 ( 0.02%)  ???:0x00000000000a19d0 [/usr/lib/x86_64-linux-gnu/libGLX_nvidia.so.565.57.01]
    2,043,728 ( 0.02%)  ???:0x0000000000a2b000 [/usr/lib/x86_64-linux-gnu/libnvidia-glcore.so.565.57.01]
    2,043,188 ( 0.02%)  ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S:__strlen_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    1,992,917 ( 0.02%)  ???:0x0000000000008660'2 [/usr/lib/x86_64-linux-gnu/libvulkan.so.1.4.313]
    1,634,126 ( 0.01%)  ./stdio-common/./stdio-common/vfprintf-internal.c:__vfprintf_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
    1,559,700 ( 0.01%)  ./stdlib/./stdlib/getenv.c:getenv [/usr/lib/x86_64-linux-gnu/libc.so.6]
    1,473,050 ( 0.01%)  ???:XrmStringToQuark [/usr/lib/x86_64-linux-gnu/libX11.so.6.4.0]

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/lib/gcc/x86_64-linux-gnu/11/include/smmintrin.h
--------------------------------------------------------------------------------
Ir                 

-- line 626 ----------------------------------------
        .             return (__m128i) __builtin_ia32_pcmpistrm128 ((__v16qi)__X,
        .           						(__v16qi)__Y,
        .           						__M);
        .           }
        .           
        .           extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .           _mm_cmpistri (__m128i __X, __m128i __Y, const int __M)
        .           {
1,091,923 ( 0.01%)    return __builtin_ia32_pcmpistri128 ((__v16qi)__X,
        .           				      (__v16qi)__Y,
        .           				      __M);
        .           }
        .           
        .           extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .           _mm_cmpestrm (__m128i __X, int __LX, __m128i __Y, int __LY, const int __M)
        .           {
        .             return (__m128i) __builtin_ia32_pcmpestrm128 ((__v16qi)__X, __LX,
-- line 642 ----------------------------------------
-- line 679 ----------------------------------------
        .             return __builtin_ia32_pcmpistria128 ((__v16qi)__X,
        .           				       (__v16qi)__Y,
        .           				       __M);
        .           }
        .           
        .           extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .           _mm_cmpistrc (__m128i __X, __m128i __Y, const int __M)
        .           {
1,115,761 ( 0.01%)    return __builtin_ia32_pcmpistric128 ((__v16qi)__X,
        .           				       (__v16qi)__Y,
        .           				       __M);
        .           }
        .           
        .           extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .           _mm_cmpistro (__m128i __X, __m128i __Y, const int __M)
        .           {
        .             return __builtin_ia32_pcmpistrio128 ((__v16qi)__X,
-- line 695 ----------------------------------------
-- line 703 ----------------------------------------
        .             return __builtin_ia32_pcmpistris128 ((__v16qi)__X,
        .           				       (__v16qi)__Y,
        .           				       __M);
        .           }
        .           
        .           extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .           _mm_cmpistrz (__m128i __X, __m128i __Y, const int __M)
        .           {
  621,578 ( 0.00%)    return __builtin_ia32_pcmpistriz128 ((__v16qi)__X,
        .           				       (__v16qi)__Y,
        .           				       __M);
        .           }
        .           
        .           extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .           _mm_cmpestra (__m128i __X, int __LX, __m128i __Y, int __LY, const int __M)
        .           {
        .             return __builtin_ia32_pcmpestria128 ((__v16qi)__X, __LX,
-- line 719 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/display/mlx_image.c
--------------------------------------------------------------------------------
Ir                 

        .           #include "miniRT.h"
        .           
        .           void	clear_image(t_mlx *mlx)
        4 ( 0.00%)  {
        .           	int	x;
        .           	int	y;
        .           
        1 ( 0.00%)  	x = 0;
    4,004 ( 0.00%)  	while (x != mlx->info.height)
        .           	{
      800 ( 0.00%)  		y = 0;
3,203,200 ( 0.03%)  		while (y != mlx->info.width)
8,320,004 ( 0.07%)  			mlx_set_image_pixel(mlx->mlx, mlx->img, y++, x, (mlx_color){ .rgba = 0x000000FF });
67,840,848 ( 0.54%)  => ???:mlx_set_image_pixel (640,000x)
      766 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
    2,400 ( 0.00%)  		x++;
        .           	}
        3 ( 0.00%)  }
        .           
        .           void	new_image(t_data *data, t_mlx *mlx)
        5 ( 0.00%)  {
       10 ( 0.00%)  	mlx_destroy_image(mlx->mlx, mlx->img);
   31,194 ( 0.00%)  => ???:mlx_destroy_image (1x)
      758 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
        4 ( 0.00%)  	free(data->image.new_img);
      283 ( 0.00%)  => ./malloc/./malloc/malloc.c:free (1x)
        4 ( 0.00%)  	free(data->image.old_img);
      148 ( 0.00%)  => ./malloc/./malloc/malloc.c:free (1x)
       11 ( 0.00%)  	mlx->img = mlx_new_image(mlx->mlx, mlx->info.width, mlx->info.height);
   78,385 ( 0.00%)  => ???:mlx_new_image (1x)
       10 ( 0.00%)  	data->image.new_img = ft_calloc(mlx->info.width * mlx->info.height,sizeof(mlx_color));
30,720,367 ( 0.25%)  => ???:ft_calloc (1x)
       10 ( 0.00%)  	data->image.old_img = ft_calloc(mlx->info.width * mlx->info.height,sizeof(mlx_color));
30,720,292 ( 0.25%)  => ???:ft_calloc (1x)
        2 ( 0.00%)  	data->image.nb_images = 0;
        3 ( 0.00%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/render/make_average_pixel.c
--------------------------------------------------------------------------------
Ir                  

         .           #include "miniRT.h"
         .           
         .           void	average_pixel(mlx_color *n_pixel, mlx_color o_pixel, float coef_new_p, float coef_old_p)
16,780,800 ( 0.13%)  {
         .           	float	tmp;
         .           
30,764,800 ( 0.25%)  	tmp = n_pixel->r * coef_old_p + o_pixel.r * coef_new_p;
19,577,600 ( 0.16%)  	n_pixel->r = (uint8_t)(tmp + 0.5f); 
30,764,800 ( 0.25%)  	tmp = n_pixel->g * coef_old_p + o_pixel.g * coef_new_p;
16,780,800 ( 0.13%)  	n_pixel->g = (uint8_t)(tmp + 0.5f); 
30,764,800 ( 0.25%)  	tmp = n_pixel->b * coef_old_p + o_pixel.b * coef_new_p;
16,780,800 ( 0.13%)  	n_pixel->b = (uint8_t)(tmp + 0.5f);
 5,593,600 ( 0.04%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/render/render.c
--------------------------------------------------------------------------------
Ir                  

         .           #include "miniRT.h"
         .           
         .           mlx_color	ray_color(t_data *data, t_ray ray)
16,934,400 ( 0.14%)  {
 5,644,800 ( 0.05%)  	float	t = -1;
 5,644,800 ( 0.05%)  	float	old_t = 0;
         .           	mlx_color	pixel;
16,934,400 ( 0.14%)  	t_scene		scene = data->scene;
62,092,800 ( 0.50%)  => ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms (2,822,400x)
 5,644,800 ( 0.05%)  	t_list		*tmp = scene.sphere;
         .           	t_sphere 	*sphere;
         .           
22,579,200 ( 0.18%)  	while (tmp)
         .           	{
16,934,400 ( 0.14%)  		sphere = (t_sphere *)tmp->content;
90,316,800 ( 0.72%)  		t = hit_sphere(sphere->coordinate, sphere->diameter, ray);
1,365,054,020 (10.93%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/render/shape/sphere.c:hit_sphere (5,644,800x)
         .           //		if (t != -1.0f)
         .           //			printf("%f - %f\n", t, old_t);
38,373,287 ( 0.31%)  		if (t > 0.0f && (t < old_t || old_t == 0))
         .           		{
58,177,026 ( 0.47%)  			t_vec point = vec_add(ray.origin, vec_mul(ray.direction, t));
100,954,251 ( 0.81%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_add (1,711,089x)
88,976,628 ( 0.71%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_mul (1,711,089x)
70,154,649 ( 0.56%)  			t_vec normal = normalize(vec_sub(point, (t_vec){sphere->coordinate.x, sphere->coordinate.y, sphere->coordinate.z}));
100,954,251 ( 0.81%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_sub (1,711,089x)
95,820,984 ( 0.77%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/equation.c:normalize (1,711,089x)
11,977,623 ( 0.10%)  			pixel.r = (uint8_t)(255.0f * 0.5f * (normal.i + 1.0f));
 8,555,445 ( 0.07%)  			pixel.g = (uint8_t)(255.0f * 0.5f * (normal.j + 1.0f));
 8,555,445 ( 0.07%)  			pixel.b = (uint8_t)(255.0f * 0.5f * (normal.k + 1.0f));
 1,711,089 ( 0.01%)  			pixel.a = 255;
 3,422,178 ( 0.03%)  			old_t = t;
         .           		}
16,934,400 ( 0.14%)  		tmp = tmp->next;
         .           	}
11,289,600 ( 0.09%)  	if (old_t > 0.0f)
         .           	{
 4,336,821 ( 0.03%)  		return (pixel);	
         .           	}
 1,376,793 ( 0.01%)  	return ((mlx_color){ .rgba = 0xFFFFFFFF });
11,289,600 ( 0.09%)  }
         .           
         .           mlx_color	render(t_data *data, int x, int y)
16,934,400 ( 0.14%)  {
         .           	t_setting_cam	camera;
         .           
16,934,404 ( 0.14%)  	camera = data->setting_cam;
84,672,000 ( 0.68%)  => ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms (2,822,400x)
       977 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
84,672,000 ( 0.68%)  	return (ray_color(data, get_antialiasing(data, camera.ray_direction[x][y])));
2,247,996,379 (18.01%)  => srcs/render/render.c:ray_color (2,822,400x)
272,896,745 ( 2.19%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/render/antialiasing.c:get_antialiasing (2,822,400x)
         .           }

 7,355,889 ( 0.06%)  <counts for unidentified lines in srcs/render/render.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/render/antialiasing.c
--------------------------------------------------------------------------------
Ir                  

         .           #include "miniRT.h"
         .           
         .           t_ray get_antialiasing(t_data *data, t_vec base_ray)
33,868,800 ( 0.27%)  {
16,934,400 ( 0.14%)  	t_setting_cam	cam = data->setting_cam;
84,672,000 ( 0.68%)  => ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms (2,822,400x)
 8,467,200 ( 0.07%)  	if (!data->image.antialiasing)
39,065,600 ( 0.31%)  		return (create_ray(cam.camera_center, base_ray));
69,760,000 ( 0.56%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/ray.c:create_ray (2,790,400x)
   416,000 ( 0.00%)  	t_vec dir = normalize(base_ray);
 1,792,745 ( 0.01%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/equation.c:normalize (32,000x)
         .           
   128,000 ( 0.00%)  	dir.i += cam.rand_h;
   128,000 ( 0.00%)  	dir.j += cam.rand_v;
   576,000 ( 0.00%)  	dir = normalize(dir);
 1,792,000 ( 0.01%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/equation.c:normalize (32,000x)
   416,000 ( 0.00%)  	return create_ray (cam.camera_center, dir);
   800,000 ( 0.01%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/ray.c:create_ray (32,000x)
 8,467,200 ( 0.07%)  }

 5,612,800 ( 0.04%)  <counts for unidentified lines in srcs/render/antialiasing.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/render/shape/sphere.c
--------------------------------------------------------------------------------
Ir                   

          .           #include "miniRT.h"
          .           
          .           float hit_sphere(t_coordinate center, double radius, t_ray r)
 67,737,600 ( 0.54%)  {
146,764,800 ( 1.18%)      t_vec oc = vec_sub((t_vec){center.x, center.y, center.z}, r.origin);
333,043,200 ( 2.67%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_sub (5,644,800x)
 84,672,000 ( 0.68%)      float a = scalar_product(r.direction, r.direction);
135,475,200 ( 1.09%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/equation.c:scalar_product (5,644,800x)
 79,027,200 ( 0.63%)      float b = scalar_product(r.direction, oc);
135,475,200 ( 1.09%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/equation.c:scalar_product (5,644,800x)
107,251,200 ( 0.86%)      float c = scalar_product(oc, oc) - radius * radius;
135,475,200 ( 1.09%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/equation.c:scalar_product (5,644,800x)
 33,868,800 ( 0.27%)      float discriminant = b * b - a * c;
          .           
 28,224,000 ( 0.23%)      if (discriminant < 0.0)
 11,155,497 ( 0.09%)          return -1.0;
          .           	else
 28,894,515 ( 0.23%)          return (b - sqrt(discriminant)) / (a);
 15,410,408 ( 0.12%)  => ./math/./math/w_sqrt_compat.c:sqrt (1,926,301x)
 22,579,200 ( 0.18%)  }
          .           

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/render/resolution.c
--------------------------------------------------------------------------------
Ir                     

            .           #include "miniRT.h"
            .           
            .           void	handle_low_resolution(t_data *data, int x, int y, int resolution)
   16,934,400 ( 0.14%)  {
            .           	int	end_x;
            .           	int	end_y;
    5,644,800 ( 0.05%)  	int	base_x = x;
            .           	int	pos;
            .           	mlx_color	*image;
            .           	mlx_color	pixel;
            .           
    8,467,200 ( 0.07%)  	end_x = x + resolution;
    8,467,200 ( 0.07%)  	end_y = y + resolution;
            .           //	printf("%d - %d / %d - %d\n", x, y, end_x, end_y);
   11,289,600 ( 0.09%)  	if (end_x > data->mlx.info.width)
            .           		end_x = data->mlx.info.width;
   11,289,600 ( 0.09%)  	if (end_y > data->mlx.info.height)
            .           		end_y = data->mlx.info.height;
    8,467,200 ( 0.07%)  	image = data->image.new_img;
   22,579,200 ( 0.18%)  	pixel = image[y * data->mlx.info.width + x];
  121,363,200 ( 0.97%)  	while (y != end_y)
            .           	{
  112,896,000 ( 0.90%)  		pos = y * data->mlx.info.width;
   56,448,000 ( 0.45%)  		x = base_x;
1,213,632,000 ( 9.72%)  		while (x != end_x)
            .           		{
1,693,440,000 (13.57%)  			image[pos + x] = pixel;
  846,720,000 ( 6.78%)  			x++;
            .           		}
   84,672,000 ( 0.68%)  		y++;
            .           	}
    5,644,800 ( 0.05%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/math/vector.c
--------------------------------------------------------------------------------
Ir                   

          .           #include "miniRT.h"
          .           
          .           t_vec create_vec(float i, float j, float k)
 85,890,475 ( 0.69%)  {
          .               t_vec vec;
          .           
 34,356,190 ( 0.28%)      vec.i = i;
 34,356,190 ( 0.28%)      vec.j = j;
 34,356,190 ( 0.28%)      vec.k = k;
137,424,760 ( 1.10%)      return (vec);
          .           }
          .           
          .           t_vec vec_add(t_vec vec1, t_vec vec2)
 64,066,395 ( 0.51%)  {
106,777,325 ( 0.86%)      return (create_vec(vec1.i + vec2.i, vec1.j + vec2.j, vec1.k + vec2.k));
 81,150,767 ( 0.65%)  => srcs/math/vector.c:create_vec (4,271,093x)
          .           }
          .           
          .           t_vec vec_sub(t_vec vec1, t_vec vec2)
129,538,425 ( 1.04%)  {
215,897,375 ( 1.73%)      return (create_vec(vec1.i - vec2.i, vec1.j - vec2.j, vec1.k - vec2.k));
164,082,005 ( 1.31%)  => srcs/math/vector.c:create_vec (8,635,895x)
          .           }
          .           
          .           t_vec vec_mul(t_vec vec, float mult)
 42,710,910 ( 0.34%)  {
 98,235,093 ( 0.79%)      return (create_vec(vec.i * mult, vec.j * mult, vec.k * mult));
 81,150,729 ( 0.65%)  => srcs/math/vector.c:create_vec (4,271,091x)
          .           }
          .           
          .           t_vec vec_div(t_vec vec, float div)
         80 ( 0.00%)  {
         32 ( 0.00%)      if (div == 0.0f)
          .               {
          .                   fprintf(stderr, "Erreur : division par zéro dans vec_div\n");
          .                   return (create_vec(0.0f, 0.0f, 0.0f));
          .               }
        112 ( 0.00%)      return (create_vec(vec.i / div, vec.j / div, vec.k / div));
        152 ( 0.00%)  => srcs/math/vector.c:create_vec (8x)
         72 ( 0.00%)  }
          .           
          .           t_vec vec_cross(t_vec a, t_vec b) {
          .               return create_vec(
          .                   a.j * b.k - a.k * b.j,
          .                   a.k * b.i - a.i * b.k,
          .                   a.i * b.j - a.j * b.i);
          .           }

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/render/setup_render.c
--------------------------------------------------------------------------------
Ir                  

         .           #include "miniRT.h"
         .           
         .           void	create_ray_direction(t_setting_cam *scene)
         8 ( 0.00%)  {
         .           	int		x;
         .           	int		y;
         .           	t_vec	pixel_center;
         .           
        18 ( 0.00%)  	scene->ray_direction = ft_calloc((scene->width + 1), sizeof(t_vec *));
   160,731 ( 0.00%)  => ???:ft_calloc (2x)
        10 ( 0.00%)  	scene->ray_direction[(int)scene->width] = NULL;
         2 ( 0.00%)  	x = 0;
     8,008 ( 0.00%)  	while (x != scene->width)
         .           	{
     1,600 ( 0.00%)  		y = 0;
    16,000 ( 0.00%)  		scene->ray_direction[x] = malloc((scene->height) * sizeof(t_vec));
   529,728 ( 0.00%)  => ./malloc/./malloc/malloc.c:malloc (1,600x)
 6,406,400 ( 0.05%)  		while (y != scene->height)
         .           		{
29,440,000 ( 0.24%)  			pixel_center = vec_add(
75,520,000 ( 0.60%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_add (1,280,000x)
46,080,000 ( 0.37%)      			vec_add(scene->pixel00_loc, vec_mul(scene->pixel_delta_h, x)),
75,520,000 ( 0.60%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_add (1,280,000x)
66,560,000 ( 0.53%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_mul (1,280,000x)
19,200,000 ( 0.15%)      			vec_mul(scene->pixel_delta_v, y));
66,560,000 ( 0.53%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_mul (1,280,000x)
40,960,000 ( 0.33%)  			scene->ray_direction[x][y] = vec_sub(pixel_center, scene->camera_center);
75,520,000 ( 0.60%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_sub (1,280,000x)
 3,840,000 ( 0.03%)  			y++;
         .           		}
     4,800 ( 0.00%)  		x++;
         .           	}
         6 ( 0.00%)  }
         .           
         .           void	calcule_res(t_data *data, t_setting_cam *cam)
        10 ( 0.00%)  {
        42 ( 0.00%)  	cam->pixel_delta_h = vec_div(cam->viewport_h, cam->width);
       112 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_div (2x)
        42 ( 0.00%)  	cam->pixel_delta_v = vec_div(cam->viewport_v, cam->height);
       112 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_div (2x)
        52 ( 0.00%)  	cam->viewport_upper_left = vec_sub(
       118 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_sub (2x)
        40 ( 0.00%)      vec_sub(
       118 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_sub (2x)
        60 ( 0.00%)          vec_sub(cam->camera_center, create_vec(0, 0, cam->focal_length)),
       118 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_sub (2x)
        38 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:create_vec (2x)
        32 ( 0.00%)          vec_div(cam->viewport_h, 2)),
       112 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_div (2x)
        28 ( 0.00%)      	vec_div(cam->viewport_v, 2));
       112 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_div (2x)
       120 ( 0.00%)  	cam->pixel00_loc = vec_add(cam->viewport_upper_left, vec_mul(vec_add(cam->pixel_delta_h, cam->pixel_delta_v), 0.5f));
       236 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_add (4x)
       104 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:vec_mul (2x)
        26 ( 0.00%)  	cam->res_h = length(cam->pixel_delta_h) * data->image.resolution;
       818 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/equation.c:length (2x)
        26 ( 0.00%)  	cam->res_v = length(cam->pixel_delta_v) * data->image.resolution;
        60 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/equation.c:length (2x)
         6 ( 0.00%)  }
         .           
         .           void	calcule_scene(t_data *data, t_setting_cam *scene)
        10 ( 0.00%)  {
        12 ( 0.00%)  	scene->ratio = (float)data->mlx.info.width / data->mlx.info.height;
         8 ( 0.00%)  	scene->width = data->mlx.info.width;
         8 ( 0.00%)  	scene->height = data->mlx.info.height;
         4 ( 0.00%)  	scene->focal_length = 1.0f;
         4 ( 0.00%)  	scene->viewport_height = 2.0f;
        10 ( 0.00%)  	scene->viewport_width = scene->viewport_height * scene->ratio;
        38 ( 0.00%)  	scene->camera_center = create_vec(0, 0, 0);
        38 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:create_vec (2x)
        34 ( 0.00%)  	scene->viewport_h = create_vec(scene->viewport_width, 0, 0);
        38 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:create_vec (2x)
        32 ( 0.00%)  	scene->viewport_v = create_vec(0, scene->viewport_height, 0);
        38 ( 0.00%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/math/vector.c:create_vec (2x)
         6 ( 0.00%)  }
         .           
         .           void	setup_camera_setting(t_data *data)
         8 ( 0.00%)  {
         .           	t_setting_cam *scene;
         .           
         6 ( 0.00%)  	scene = &data->setting_cam;
         6 ( 0.00%)  	calcule_scene(data, scene);
       280 ( 0.00%)  => srcs/render/setup_render.c:calcule_scene (2x)
         6 ( 0.00%)  	calcule_res(data, scene);
     2,542 ( 0.00%)  => srcs/render/setup_render.c:calcule_res (2x)
         4 ( 0.00%)  	create_ray_direction(scene);
506,327,311 ( 4.06%)  => srcs/render/setup_render.c:create_ray_direction (2x)
         6 ( 0.00%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/display/mlx_screen.c
--------------------------------------------------------------------------------
Ir                  

         .           #include "miniRT.h"
         .           
         .           void	handle_pixel(t_data *data, int x, int y, int resolution)
19,756,800 ( 0.16%)  {
         .           	int			pos;
         .           	t_mlx		*mlx;
         .           
 5,644,800 ( 0.05%)  	mlx = &data->mlx;
14,112,000 ( 0.11%)  	pos = y * mlx->info.width + x;
42,336,000 ( 0.34%)  	data->image.new_img[pos] = render(data, x, y);
2,724,106,905 (21.82%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/render/render.c:render (2,822,400x)
 8,467,200 ( 0.07%)  	if (data->image.nb_images > 1)
19,577,600 ( 0.16%)  		average_pixel(&data->image.new_img[pos], \
167,808,000 ( 1.34%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/render/make_average_pixel.c:average_pixel (2,796,800x)
 8,390,400 ( 0.07%)  			data->image.old_img[pos], \
11,187,200 ( 0.09%)  			data->image.coef_new_p, data->image.coef_old_p);
 5,644,800 ( 0.05%)  	if (resolution != 1)
14,112,000 ( 0.11%)  		handle_low_resolution(data, x, y, resolution);
4,227,955,200 (33.87%)  => /home/jmassavi/Documents/commun_core/circle-4/mini_RT/srcs/render/resolution.c:handle_low_resolution (2,822,400x)
         .           
 8,467,200 ( 0.07%)  }
         .           
         .           void	swap_img_buf(t_data *data)
     1,323 ( 0.00%)  {
         .           	mlx_color	*buf;
         .           
     1,323 ( 0.00%)  	buf = 	data->image.new_img;
     1,764 ( 0.00%)  	data->image.new_img = data->image.old_img;
     1,323 ( 0.00%)  	data->image.old_img = buf;
       882 ( 0.00%)  }
         .           
         .           void	display_screen(t_data *data)
     1,764 ( 0.00%)  {
         .           	int	x;
         .           	int	y;
         .           	int	resolution;
     2,205 ( 0.00%)  	mlx_window_create_info	info = data->mlx.info;
         .           
       441 ( 0.00%)  	y = 0;
    13,671 ( 0.00%)  	data->image.coef_new_p = ((float)data->image.nb_images / (float)(data->image.nb_images + 1));
     8,379 ( 0.00%)  	data->image.coef_old_p = (1.0f / (data->image.nb_images + 1));
     1,323 ( 0.00%)  	resolution = data->image.resolution;
   142,443 ( 0.00%)  	while (y < info.height)
         .           	{
    35,280 ( 0.00%)  		x = 0;
11,395,440 ( 0.09%)  		while (x < info.width)
         .           		{
14,112,000 ( 0.11%)  			handle_pixel(data, x, y, resolution);
7,277,566,105 (58.30%)  => srcs/display/mlx_screen.c:handle_pixel (2,822,400x)
 8,467,200 ( 0.07%)  			x += resolution;
         .           		}
   105,840 ( 0.00%)  		y += resolution;
         .           	}
     5,737 ( 0.00%)  	mlx_set_image_region(data->mlx.mlx, data->mlx.img, 0, 0, info.width, info.height, data->image.new_img);
3,952,864,052 (31.67%)  => ???:mlx_set_image_region (441x)
       777 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
     3,532 ( 0.00%)  	mlx_clear_window(data->mlx.mlx, data->mlx.win, (mlx_color){ .rgba = 0x000000FF});
   204,569 ( 0.00%)  => ???:mlx_clear_window (441x)
       734 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
     4,414 ( 0.00%)  	mlx_put_image_to_window(data->mlx.mlx, data->mlx.win, data->mlx.img, 0, 0);
 1,407,289 ( 0.01%)  => ???:mlx_put_image_to_window (441x)
       790 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
       882 ( 0.00%)  	swap_img_buf(data);
     6,615 ( 0.00%)  => srcs/display/mlx_screen.c:swap_img_buf (441x)
     1,764 ( 0.00%)  	data->image.nb_images++;
     1,323 ( 0.00%)  }

     5,733 ( 0.00%)  <counts for unidentified lines in srcs/display/mlx_screen.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/math/equation.c
--------------------------------------------------------------------------------
Ir                   

          .           #include "miniRT.h"
          .           
          .           float scalar_product(t_vec a, t_vec b)
237,081,600 ( 1.90%)  {
169,344,000 ( 1.36%)      return a.i * b.i + a.j * b.j + a.k * b.k;
          .           }
          .           
          .           t_vec normalize(t_vec v)
 15,975,801 ( 0.13%)  {
          .           	t_vec unit;
 23,076,161 ( 0.18%)      float length = sqrt(v.i * v.i + v.j * v.j + v.k * v.k);
 14,200,712 ( 0.11%)  => ./math/./math/w_sqrt_compat.c:sqrt (1,775,089x)
        741 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
          .           
  7,100,356 ( 0.06%)      if (length == 0)
          .           	{
          .                   t_vec zero = {0, 0, 0};
          .                   return zero;
          .               }
          .           
  5,325,267 ( 0.04%)      unit.i = v.i / length;
  5,325,267 ( 0.04%)      unit.j = v.j / length;
  5,325,267 ( 0.04%)      unit.k = v.k / length;
  7,100,356 ( 0.06%)      return (unit);
 15,975,801 ( 0.13%)  }
          .           
          .           float length(t_vec v)
         36 ( 0.00%)  {
         56 ( 0.00%)  	return sqrtf(v.i * v.i + v.j * v.j + v.k * v.k);
        754 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
         32 ( 0.00%)  => ./math/./math/w_sqrtf_compat.c:sqrtf (4x)
          .           }
          .           
          .           t_vec	cross(t_vec a, t_vec b)
          .           {
          .           	t_vec result;
          .           	result.i = a.j * b.k - a.k * b.j;
          .           	result.j = a.k * b.i - a.i * b.k;
          .           	result.k = a.i * b.j - a.j * b.i;
-- line 35 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: srcs/math/ray.c
--------------------------------------------------------------------------------
Ir                  

         .           #include "miniRT.h"
         .           
         .           t_ray	create_ray(t_vec origin, t_vec direction)
42,336,000 ( 0.34%)  {
         .           	t_ray	ray;
         .           
11,289,600 ( 0.09%)  	ray.origin = origin;
11,289,600 ( 0.09%)  	ray.direction = direction;
 5,644,800 ( 0.05%)  	return (ray);
         .           }

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./elf/../sysdeps/x86_64/dl-machine.h
  ./elf/./elf/dl-lookup.c
  ./elf/./elf/do-rel.h
  ./libio/./libio/getc.c
  ./libio/./libio/libioP.h
  ./malloc/./malloc/malloc.c
  ./math/../sysdeps/ieee754/dbl-64/e_sqrt.c
  ./math/./math/w_sqrt_compat.c
  ./nptl/./nptl/pthread_mutex_lock.c
  ./nptl/./nptl/pthread_mutex_unlock.c
  ./stdio-common/./stdio-common/vfprintf-internal.c
  ./stdlib/../stdlib/strtol_l.c
  ./stdlib/./stdlib/getenv.c
  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S
  ./string/../sysdeps/x86_64/multiarch/strcspn-c.c
  ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S
  ./string/../sysdeps/x86_64/strcmp.S

--------------------------------------------------------------------------------
Ir                     
--------------------------------------------------------------------------------
7,557,856,692 (60.54%)  events annotated

